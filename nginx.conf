server {
    listen       80;  #could also be 1.2.3.4:80
    server_name   log.com;

    root /home/tarasov/dev/log.com;

    location / {
        ssi	on;
        index  index.html;
    }

    # internal counter
    location /counter.html {
        internal;
        ssi	on;

        #define base variables need for counter
        set $statistics_hits 1;
        set $statistics_hosts 1;
        set $statistics_hits_total 1;

        rewrite_by_lua '
            local redis = require "resty.redis"
            local red = redis:new()

            red:set_timeout(500)
            local ok, err = red:connect("127.0.0.1", 6379)
            if not ok then
                return
            end
            local hits_key = "hits:" .. ngx.var.request_uri .. ":" .. ngx.today()
            local hosts_key = "hosts:" .. ngx.var.request_uri .. ":" .. ngx.today()
            local hits_total_key = "hits:" .. ngx.today()

            local hits = red:incr(hits_key)
            local hosts = red:sadd(hosts_key, ngx.var.remote_addr)
            hosts = red:scard(hosts_key)
            local hits_total = red:incr(hits_total_key)

            -- set 2 days expiration
            if hits == 1 then
                res:expire(hits_key, 2*24*60*60)
                res:expire(hosts_key, 2*24*60*60)
            end

            ngx.var.statistics_hits = hits
            ngx.var.statistics_hosts = hosts
            ngx.var.statistics_hits_total = hits_total
        ';
    }
}
